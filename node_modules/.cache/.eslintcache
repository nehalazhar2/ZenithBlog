[{"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\index.js":"1","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\App.js":"2","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\reportWebVitals.js":"3","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\BlogArchive.js":"4","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\SingleBlog.js":"5","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\BlogCategoryPage.js":"6","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\RenderableDiv.js":"7","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\MyGallery.js":"8","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\PostHeader.js":"9","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Utils\\ApiCalls.js":"10","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\Comments.js":"11","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\BlogSidebar.js":"12","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Utils\\Endpoints.js":"13","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Utils\\GlobalFunctions.js":"14","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\CommentForm.js":"15"},{"size":577,"mtime":1658387516524,"results":"16","hashOfConfig":"17"},{"size":1041,"mtime":1658727760819,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1658386812338,"results":"19","hashOfConfig":"17"},{"size":12705,"mtime":1658727097641,"results":"20","hashOfConfig":"17"},{"size":5013,"mtime":1658389673420,"results":"21","hashOfConfig":"17"},{"size":5756,"mtime":1658727785059,"results":"22","hashOfConfig":"17"},{"size":1759,"mtime":1658471226755,"results":"23","hashOfConfig":"17"},{"size":1389,"mtime":1658388807871,"results":"24","hashOfConfig":"17"},{"size":921,"mtime":1660206878651,"results":"25","hashOfConfig":"17"},{"size":3723,"mtime":1658393485518,"results":"26","hashOfConfig":"17"},{"size":7684,"mtime":1658472081474,"results":"27","hashOfConfig":"17"},{"size":3789,"mtime":1658405328965,"results":"28","hashOfConfig":"17"},{"size":922,"mtime":1660201680053,"results":"29","hashOfConfig":"17"},{"size":704,"mtime":1658388677735,"results":"30","hashOfConfig":"17"},{"size":5303,"mtime":1658402006986,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tn6kqe",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\index.js",[],[],"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\App.js",["84"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport BlogArchive from \"./Components/BlogComponents/BlogArchive\";\nimport { Route, Switch } from \"react-router-dom\";\nimport BlogPage from \"./Components/BlogComponents/SingleBlog\";\nimport BlogCategoryPage from \"./Components/BlogComponents/BlogCategoryPage\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`${process.env.PUBLIC_URL}/`}\n        component={BlogArchive}\n      />\n\n      <Route\n        path={`${process.env.PUBLIC_URL}/news/:id/:id2`}\n        component={BlogPage}\n      />\n      <Route\n        exact\n        path={`${process.env.PUBLIC_URL}/Category/:id`}\n        component={BlogCategoryPage}\n      />\n      <Route\n        exact\n        path={`${process.env.PUBLIC_URL}/Tags/:id`}\n        component={BlogCategoryPage}\n      />\n      <Route\n        exact\n        path={`${process.env.PUBLIC_URL}/SearchResults/:id`}\n        component={BlogCategoryPage}\n      />\n      <Route component={BlogArchive} />\n    </Switch>\n  );\n}\n\nexport default App;\n","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\reportWebVitals.js",[],[],"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\BlogArchive.js",["85","86"],[],"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../Assets/MainStyleClass.css'\r\nimport '../../Assets/Blog_Section.css'\r\nimport BlogImg from \"../../images/abstract-futuristic-background-with-3d-design.jpg\";\r\nimport dateFormat from 'dateformat';\r\nimport React, { Component } from 'react'\r\nimport { GetBlogThumbnails } from '../../Utils/ApiCalls';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class BlogArchive extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          BlogsListFinal: [],\r\n          isLoading: true,\r\n        };\r\n      }\r\n      componentWillMount() {\r\n        var NewFinalArray = [];\r\n        var UniqueIDSArray = [];\r\n    \r\n        var BlogData = GetBlogThumbnails();\r\n        BlogData.then((data) => {\r\n          var Data = data;\r\n          Data.items.forEach((element) => {\r\n            var BlogObject = {};\r\n            var Blog_UniqueIDObject = {};\r\n            var AddedDate = element.fields.addedData;\r\n            var BlogDescription = element.fields.blogBasicDescription;\r\n            var BlogTitle = element.fields.blogTitle;\r\n            var BlogUniqueId = element.fields.blogUniqueId;\r\n            var BlogImageID = element.fields.blogImage.sys.id;\r\n            var BlogImage = \"\";\r\n            Data.includes.Asset.forEach((itemInner) => {\r\n              if (itemInner.sys.id == BlogImageID) {\r\n                BlogImage = \"https:\" + itemInner.fields.file.url;\r\n              }\r\n            });\r\n            BlogObject[\"AddedDate\"] = AddedDate;\r\n            BlogObject[\"BlogDescription\"] = BlogDescription;\r\n            BlogObject[\"BlogTitle\"] = BlogTitle;\r\n            BlogObject[\"BlogUniqueId\"] = BlogUniqueId;\r\n            BlogObject[\"BlogImage\"] = BlogImage;\r\n            NewFinalArray.push(BlogObject);\r\n            Blog_UniqueIDObject[\"BlogUniqueId\"] = BlogUniqueId;\r\n            Blog_UniqueIDObject[\"BlogTitle\"] = BlogTitle;\r\n    \r\n            UniqueIDSArray.push(Blog_UniqueIDObject);\r\n          });\r\n          this.setState({ BlogsListFinal: NewFinalArray }, () => {\r\n            this.setState({ isLoading: false });\r\n          });\r\n          localStorage.setItem(\"Blogs_UniqueID\", JSON.stringify(UniqueIDSArray));\r\n        });\r\n      }\r\n    componentDidMount(){\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            {/* <!-- //page title --> */}\r\n            <section>\r\n                <div className=\"w-100 position-relative\">\r\n                    <div className=\"pg-title-wrap pt-190 pb-80 position-relative w-100 mouse_anim scroll_anim\">\r\n                        <img data-depth=\"0.80\" className=\"pg-ttl-shp-img img-fluid position-absolute\" src={BlogImg} alt=\"Title Background Shape\" height=\"329\" width=\"1920\" />\r\n                        <div className=\"container\">\r\n                            <div className=\"pg-title-inner text-center position-relative w-100\">\r\n                                <h1 className='HEading_Font_color'>Blogs <i className=\"btm-ln v2 bg-color9\"></i></h1>\r\n                                <ol className=\"breadcrumb d-inline-flex justify-content-center align-items-center flex-wrap \">\r\n                                    <li className=\"breadcrumb-item \"><span title=\"Home\" className='HEading_Font_color'>Home</span></li>\r\n                                    <li className=\"breadcrumb-item active HEading_Font_color\" >Blogs</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <!-- Page Title Wrap --> */}\r\n                </div>\r\n            </section>\r\n            {/* <!-- //page title --> */}\r\n            <section>\r\n                <div className=\"w-100 pt-120 pb-120 position-relative\">\r\n                    <div className=\"container\">\r\n                        <div className=\"blog-wrap blog-spac position-relative w-100\">\r\n                            <div className=\"row mrg30 justify-content-center\">\r\n                                {this.state.BlogsListFinal.map((item, key) => {\r\n\r\n                                    var sdd = item.BlogTitle\r\n                                    while (sdd.includes(\" \")) {\r\n                                        sdd = sdd.replace(\" \", \"-\")\r\n                                    }\r\n                                    var formattedDate = new Date (item.AddedDate)\r\n                                    formattedDate=dateFormat(formattedDate,\"dd mmm\")\r\n                                    \r\n                                    return (\r\n                                        <div key={key} className=\"col-md-6 col-sm-12 col-lg-4\">\r\n                                            <div className=\"post-box brd-rd15 w-100\">\r\n                                                <div className=\"post-img overflow-hidden position-relative w-100\">\r\n                                                    <a title=\"\" href=\"#/\"><img className=\"img-fluid Blog_Img w-100\" src={item.BlogImage} alt=\"Post Img 13\" /></a>\r\n                                                    <span className=\"post-date brd-rd15 text-center position-absolute text-uppercase\"><i>{formattedDate}</i></span>\r\n                                                </div>\r\n                                                <div className=\"post-info w-100\">\r\n                                                    {/* <span className=\"post-cate d-block text-uppercase\"><a href=\"#/\" title=\"\">{product.category}</a></span> */}\r\n                                                    <Link to={\"news/\"+sdd+\"/\"+item.BlogUniqueId}>\r\n                               \r\n                                            <h3 className=\"mb-0\"><span title=\"\" className='Font_class'>{item.BlogTitle}</span></h3></Link>\r\n                                                    <p className=\"mb-0 P_class Blog_Desc\">{item.BlogDescription}</p>\r\n                                                    {/* <div className='Fa_Star_values'>\r\n                                                        <div>\r\n                                                            {Array.from({ length: product.rating.blog_rate }).map((i) => (\r\n                                                                <span key={i} class=\"fa fa-star star-active ml-3\"></span>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                        <div>\r\n                                                     Total Count:  {product.rating.blog_count}\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    <div className='Api_Rating_Class'>{product.rating.blog_rate}/5</div> */}\r\n                                                    <br />\r\n                                                    <Link to={ \"/news/\"+sdd + \"/\" + item.BlogUniqueId}>\r\n                                                    <span className=\"simple-link d-inline-block text-uppercase Last_Read_more_class\" title=\"\" >Read More<i className=\"flaticon-right-arrow text-color3\"></i></span>\r\n                                                </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// const BlogArchive = () => {\r\n//     const navigate = useNavigate();\r\n//     var blog_data = JSON.parse(localStorage.getItem('Blog_Data')) == null ? [] : JSON.parse(localStorage.getItem('Blog_Data'));\r\n//     const handleClick = (product) => {\r\n//         localStorage.setItem('Single_Product_Data', JSON.stringify(product));\r\n//         navigate('/BlogDetailPage');\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             {/* <!-- //page title --> */}\r\n//             <section>\r\n//                 <div className=\"w-100 position-relative\">\r\n//                     <div className=\"pg-title-wrap pt-190 pb-80 position-relative w-100 mouse_anim scroll_anim\">\r\n//                         <img data-depth=\"0.80\" className=\"pg-ttl-shp-img img-fluid position-absolute\" src={BlogImg} alt=\"Title Background Shape\" height=\"329\" width=\"1920\" />\r\n//                         <div className=\"container\">\r\n//                             <div className=\"pg-title-inner text-center position-relative w-100\">\r\n//                                 <h1 className='HEading_Font_color'>Blogs <i className=\"btm-ln v2 bg-color9\"></i></h1>\r\n//                                 <ol className=\"breadcrumb d-inline-flex justify-content-center align-items-center flex-wrap \">\r\n//                                     <li className=\"breadcrumb-item \"><a href=\"#/\" title=\"Home\" className='HEading_Font_color'>Home</a></li>\r\n//                                     <li className=\"breadcrumb-item active HEading_Font_color\" >Blogs</li>\r\n//                                 </ol>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     {/* <!-- Page Title Wrap --> */}\r\n//                 </div>\r\n//             </section>\r\n//             {/* <!-- //page title --> */}\r\n//             <section>\r\n//                 <div className=\"w-100 pt-120 pb-120 position-relative\">\r\n//                     <div className=\"container\">\r\n//                         <div className=\"blog-wrap blog-spac position-relative w-100\">\r\n//                             <div className=\"row mrg30 justify-content-center\">\r\n//                                 {blog_data.map((product, key) => (\r\n//                                     <div key={key} className=\"col-md-6 col-sm-12 col-lg-4\">\r\n//                                         <div className=\"post-box brd-rd15 w-100\">\r\n//                                             <div className=\"post-img overflow-hidden position-relative w-100\">\r\n//                                                 <a title=\"\" href=\"#/\"><img className=\"img-fluid w-100\" src={product.backgroungImg_blog} alt=\"Post Img 13\" height=\"576\" width=\"1024\" /></a>\r\n//                                                 <span className=\"post-date brd-rd15 text-center position-absolute text-uppercase\"><i>{product.time_blog}</i></span>\r\n//                                             </div>\r\n//                                             <div className=\"post-info w-100\">\r\n//                                                 <span className=\"post-cate d-block text-uppercase\"><a href=\"#/\" title=\"\">{product.category}</a></span>\r\n//                                                 <h3 className=\"mb-0\"><a href=\"#/\" title=\"\" className='Font_class'>{product.title_blog}</a></h3>\r\n//                                                 <p className=\"mb-0 P_class\">{product.sub_blog}</p>\r\n//                                                 <div className='Fa_Star_values'>\r\n//                                                     <div>\r\n//                                                         {Array.from({ length: product.rating.blog_rate }).map((i) => (\r\n//                                                         <span key={i} class=\"fa fa-star star-active ml-3\"></span>\r\n//                                                     ))}\r\n//                                                     </div>\r\n//                                                     {/* <div>\r\n//                                                      Total Count:  {product.rating.blog_count}\r\n//                                                     </div> */}\r\n//                                                 </div>\r\n//                                                 <div className='Api_Rating_Class'>{product.rating.blog_rate}/5</div>\r\n//                                                 <br />\r\n//                                                 <a className=\"simple-link d-inline-block text-uppercase Last_Read_more_class\" href=\"#/\" title=\"\" onClick={() => handleClick(product)}>Read More<i className=\"flaticon-right-arrow text-color3\"></i></a>\r\n//                                             </div>\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 ))}\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </section>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default BlogArchive","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\SingleBlog.js",["87","88","89"],[],"import React, { Component } from \"react\";\r\nimport { GetBlogContent } from \"../../Utils/ApiCalls\";\r\nimport { PostHeader } from \"../PostHeader\";\r\nimport \"../../Assets/SingleBlog.css\";\r\nimport { RenderableDiv } from \"../RenderableDiv\";\r\nimport MY_Gallery from \"../MyGallery\"\r\nimport BlogSidebar from \"./BlogSidebar\";\r\nimport Comments from \"./Comments\";\r\nexport default class BlogPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      BlogId: \"\",\r\n      BlogObj: {},\r\n      isLoading: true,\r\n      BlogText: {},\r\n      BlogCategories: [],\r\n      BlogTags: [],\r\n      blogImages: [],\r\n      BlogBackendId:\"null\",\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    // var queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    var pathNameOfLink=window.location.pathname;\r\n    pathNameOfLink=pathNameOfLink.substring(pathNameOfLink.lastIndexOf(\"/\")+1,pathNameOfLink.length)\r\n    console.log(pathNameOfLink)\r\n\r\n    var Blog_Data = GetBlogContent(pathNameOfLink);\r\n    Blog_Data.then(\r\n      (data) => {\r\n        if (data !== null) {\r\n          var Data = data;\r\n          var BlogMainId= Data.items[0].sys.id\r\n          var BlogObject = {};\r\n          var AddedDate = Data.items[0].fields.addedData;\r\n          var BlogDescription = Data.items[0].fields.blogBasicDescription;\r\n          var BlogTitle = Data.items[0].fields.blogTitle;\r\n          var BlogUniqueId = Data.items[0].fields.blogUniqueId;\r\n          var BlogImageID = Data.items[0].fields.blogImage.sys.id;\r\n          var BlogTextMain = Data.items[0].fields.blogTextMain;\r\n          var BlogCategories = Data.items[0].fields.blogCategories;\r\n          var BlogTags = Data.items[0].fields.blogTagsList;\r\n          var BlogImage = \"\";\r\n          var BlogImageObj = {};\r\n          Data.includes.Asset.forEach((itemInner) => {\r\n            if (itemInner.sys.id == BlogImageID) {\r\n              BlogImage = \"https:\" + itemInner.fields.file.url;\r\n            }\r\n          });\r\n          Data.includes.Asset.forEach((element) => {\r\n            BlogImageObj = {\r\n              src: \"https:\" + element.fields.file.url,\r\n              width: element.fields.file.details.image.width,\r\n              height: element.fields.file.details.image.height,\r\n            };\r\n            this.state.blogImages.push(BlogImageObj);\r\n          });\r\n\r\n          BlogObject[\"AddedDate\"] = AddedDate;\r\n          BlogObject[\"BlogDescription\"] = BlogDescription;\r\n          BlogObject[\"BlogTitle\"] = BlogTitle;\r\n          BlogObject[\"BlogUniqueId\"] = BlogUniqueId;\r\n          BlogObject[\"BlogImage\"] = BlogImage;\r\n\r\n          this.setState({\r\n            BlogText: BlogTextMain,\r\n            BlogCategories: BlogCategories,\r\n            BlogTags: BlogTags,\r\n            // BlogBackendId:BlogMainId\r\n          });\r\n          this.setState({ BlogObj: BlogObject });\r\n          this.setState({ isLoading: false });\r\n          setTimeout(() => {\r\n            this.setState({ BlogBackendId:BlogMainId})\r\n          }, 2000);\r\n        }\r\n      },\r\n      () => {}\r\n    );\r\n  }\r\n  componentDidMount(){\r\n    window.scrollTo(0, 0)\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.state.isLoading ? (\r\n          <div className=\"page-wrapper\">\r\n            <PostHeader Title={this.state.BlogObj.BlogTitle} />\r\n            <div className=\"container Blog_Content\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-8 col-lg-8 col-md-8 MainPostBody MainBlog p-0 mb-4\">\r\n                  <div className=\"blog_date\">\r\n                    <i className=\"fa-regular fa-calendar\"></i>{\" \"}\r\n                    <span>{this.state.BlogObj.AddedDate}</span>\r\n                  </div>\r\n                  <img src={this.state.BlogObj.BlogImage} />\r\n                  <div className=\"BlogMainText mt-4 p-3\">\r\n\r\n                    {this.state.BlogCategories !== undefined?\r\n                      <h5>{this.state.BlogCategories[0]}</h5>\r\n                    :\r\n                    <></>\r\n                    }\r\n                    {this.state.BlogText !== null ||\r\n                    this.state.BlogText !== undefined ||\r\n                    this.state.BlogText !== [] ? (\r\n                      <RenderableDiv text={this.state.BlogText} />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n\r\n                    {this.state.blogImages.length > 1 ? (\r\n                      <MY_Gallery Photos={this.state.blogImages} />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mt-4 p-3\">\r\n                  <Comments ID={this.state.BlogBackendId}/>  \r\n                  </div>\r\n                      \r\n\r\n                </div>\r\n                {/* MainContent End */}\r\n                {/* SideBar */}\r\n                <BlogSidebar/>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\BlogCategoryPage.js",["90","91","92","93","94","95"],[],"import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BlogByCategoy, BlogBySearch, BlogByTag } from \"../../Utils/ApiCalls\";\r\n\r\nimport BlogSidebar from \"./BlogSidebar\";\r\nimport { PostHeader } from \"../PostHeader\";\r\n\r\nexport default class BlogCategoryPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      BlogsListFinal: [],\r\n      CategoryName: \"\",\r\n      TagName: \"\",\r\n      isLoading: true,\r\n      Query: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    var NewFinalArray = [];\r\n    var queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n\r\n    var pathNameOfLink = window.location.pathname;\r\n    pathNameOfLink = pathNameOfLink.substring(\r\n      pathNameOfLink.lastIndexOf(\"/\") + 1,\r\n      pathNameOfLink.length\r\n    );\r\n    console.log(pathNameOfLink);\r\n    var TypeOfQuery = window.location.pathname;\r\n    TypeOfQuery = TypeOfQuery.substring(\r\n      TypeOfQuery.indexOf(\"/\") + 1,\r\n      TypeOfQuery.lastIndexOf(\"/\")\r\n    );\r\n    console.log(TypeOfQuery);\r\n\r\n    while (pathNameOfLink.includes(\"-\")) {\r\n      pathNameOfLink = pathNameOfLink.replace(\"-\", \" \");\r\n    }\r\n    if (TypeOfQuery === \"Category\") {\r\n      this.setState({ CategoryName: pathNameOfLink });\r\n      var response = BlogByCategoy(pathNameOfLink);\r\n    } else if (TypeOfQuery === \"Tags\") {\r\n      this.setState({ TagName: pathNameOfLink });\r\n      var response = BlogByTag(pathNameOfLink);\r\n    } else if (TypeOfQuery === \"SearchResults\") {\r\n      while (pathNameOfLink.includes(\"-\")) {\r\n        pathNameOfLink = pathNameOfLink.replace(\"-\", \" \");\r\n      }\r\n      console.log(pathNameOfLink);\r\n      this.setState({ Query: pathNameOfLink });\r\n      var response = BlogBySearch(pathNameOfLink);\r\n    } else {\r\n    }\r\n\r\n    response.then((data) => {\r\n      var Data = data;\r\n      Data.items.forEach((element) => {\r\n        var BlogObject = {};\r\n        var Blog_UniqueIDObject = {};\r\n        var AddedDate = element.fields.addedData;\r\n        var BlogDescription = element.fields.blogBasicDescription;\r\n        var BlogCategories = element.fields.blogCategories;\r\n        var BlogTitle = element.fields.blogTitle;\r\n        var BlogUniqueId = element.fields.blogUniqueId;\r\n        var BlogImageID = element.fields.blogImage.sys.id;\r\n        var BlogImage = \"\";\r\n        Data.includes.Asset.forEach((itemInner) => {\r\n          if (itemInner.sys.id == BlogImageID) {\r\n            BlogImage = \"https:\" + itemInner.fields.file.url;\r\n          }\r\n        });\r\n        BlogObject[\"AddedDate\"] = AddedDate;\r\n        BlogObject[\"BlogDescription\"] = BlogDescription;\r\n        BlogObject[\"BlogTitle\"] = BlogTitle;\r\n        BlogObject[\"BlogUniqueId\"] = BlogUniqueId;\r\n        BlogObject[\"BlogImage\"] = BlogImage;\r\n        BlogObject[\"BlogCategory\"] = BlogCategories;\r\n        NewFinalArray.push(BlogObject);\r\n        Blog_UniqueIDObject[\"BlogTitle\"] = BlogTitle;\r\n      });\r\n      this.setState({ BlogsListFinal: NewFinalArray }, () => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.CategoryName !== \"\" ? (\r\n          <PostHeader Title={this.state.CategoryName} Category={true} />\r\n        ) : this.state.TagName !== \"\" ? (\r\n          <PostHeader Title={this.state.TagName} Tag={true} />\r\n        ) : this.state.Query !== \"\" ? (\r\n          <PostHeader Title={this.state.Query} Query={true} />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-8 col-lg-8 col-md-8\">\r\n              {this.state.BlogsListFinal.map((item, key) => {\r\n                var sdd = item.BlogTitle;\r\n                while (sdd.includes(\" \")) {\r\n                  sdd = sdd.replace(\" \", \"-\");\r\n                }\r\n                return (\r\n                  <div\r\n                    className=\"col-xl-12 col-lg-12 col-md-12 MainPostBody p-0 mb-4\"\r\n                    key={key}\r\n                  >\r\n                    <div className=\"blog_date\">\r\n                      <i className=\"fa-regular fa-calendar\"></i>{\" \"}\r\n                      <span>{item.AddedDate}</span>\r\n                    </div>\r\n                    <img\r\n                      className=\"Blog_Image\"\r\n                      src={item.BlogImage}\r\n                      height={500}\r\n                    />\r\n\r\n                    <div className=\"BlogMainText mt-3 m-0\">\r\n                      <h5>{this.state.CategoryName}</h5>\r\n                    </div>\r\n\r\n                    <div className=\"Blog_Category_Title\">\r\n                      <Link to={\"/news/\" + sdd + \"/\" + item.BlogUniqueId}>\r\n                        <h3>{item.BlogTitle}</h3>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"Blog_Category_Desc\">\r\n                      <p className=\"Blog_Category_Desc_para\">\r\n                        {item.BlogDescription}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"Blog_Btn\">\r\n                      <Link\r\n                        to={\r\n                          \"/news/\" + sdd + \"/\" + item.BlogUniqueId\r\n                          //+ \"?BlogId=\" + item.BlogUniqueId\r\n                        }\r\n                      >\r\n                        <button className=\"btn btn-default ReadMoreBtn pr-0 pl-0\">\r\n                          Read More\r\n                        </button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <BlogSidebar />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\RenderableDiv.js",["96","97","98","99","100","101","102","103","104","105"],[],"import { useState, useEffect } from \"react\";\r\nimport \"../Assets/RenderableDivcss.css\"\r\n\r\nexport function RenderableDiv(props) {\r\n  const [MainObject, setMainObject] = useState(props.text);\r\n\r\n  useEffect(() => {\r\n    if (props.text != MainObject) {\r\n      setMainObject(props.text);\r\n      console.log(\"Update\", props.text);\r\n    }\r\n  }, [props]);\r\n\r\n  if (MainObject != undefined) {\r\n    return (\r\n      <>\r\n        {MainObject.content.map((item, key) => {\r\n          return (\r\n            <div key={key}>\r\n              {item.nodeType == \"heading-1\" ? (\r\n                <h1 className=\"Heading_01_Font_Color\">{item.content[0].value}\r\n                </h1>\r\n              ) : item.nodeType == \"heading-2\" ? (\r\n                <h2 className=\"Heading_01_Font_Color\">{item.content[0].value}\r\n                </h2>\r\n              ) : item.nodeType == \"heading-3\" ? (\r\n                <h3 className=\"Heading_01_Font_Color\">{item.content[0].value}\r\n                </h3>\r\n              ) : item.nodeType == \"heading-4\" ? (\r\n                <h4 className=\"Heading_01_Font_Color\">{item.content[0].value}\r\n                </h4>\r\n              ) : item.nodeType == \"heading-5\" ? (\r\n                <h5 className=\"Heading_01_Font_Color\">{item.content[0].value}\r\n                </h5>\r\n              ) : item.nodeType == \"heading-6\" ? (\r\n                <h6 className=\"Heading_01_Font_Color\">{item.content[0].value}\r\n                </h6>\r\n              ) : item.nodeType == \"paragraph\" ? (\r\n                <p>{item.content[0].value}\r\n                </p>\r\n              ) : (\r\n                <p>{item.content[0].value}\r\n                </p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n}\r\n\r\n","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\MyGallery.js",[],[],"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\PostHeader.js",["106"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Assets/PostHeader.css\";\r\nexport const PostHeader = (props) => {\r\n  return (\r\n    <div className=\"HeaderBody\">\r\n      <div className=\"container\">\r\n        <div className=\"Post_Title\">\r\n          <h4>{props.Title}</h4>\r\n          {props.Category ? (\r\n            <p>\r\n              Home / News / Category\r\n              / {props.Title}\r\n            </p>\r\n          ) : props.Tag ? (\r\n            <p>\r\n              Home / News / Tag /{\" \"}\r\n              {props.Title}\r\n            </p>\r\n          ) : props.Query ? (\r\n            <p className=\"Search_Results\">\r\n              Home / News / Search\r\n              Results / {props.Title}\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Home / News /{\" \"}\r\n              {props.Title}\r\n            </p>\r\n          )}{\" \"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Utils\\ApiCalls.js",[],[],"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\Comments.js",["107","108","109","110","111","112"],[],"import React, { Component } from \"react\";\r\nimport \"../../Assets/CommentSection.css\";\r\n// import commentimage from \"../../images/commentimage.jpeg\";\r\nimport { GettingBlogComments, PostingComment } from \"../../Utils/ApiCalls\";\r\nimport { GetCurrDate } from \"../../Utils/GlobalFunctions\";\r\nimport CommentForm from \"./CommentForm\";\r\nexport default class Comments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Comment_Message: \"\",\r\n      Comment_Name: \"\",\r\n      Comment_Email: \"\",\r\n      CommentsData: null,\r\n      Comment_Reply: false,\r\n      Reply_Name: \"\",\r\n      Reply_Id:\"\",\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(NewProp) {\r\n    if (this.props.ID !== NewProp.ID) {\r\n      var Comment_Response = GettingBlogComments(NewProp.ID);\r\n      Comment_Response.then((Data) => {\r\n        if (Data !== null) {\r\n          this.setState({ CommentsData: Data.items });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  OpenReply = (Name,ID) => {\r\n    this.setState({ Comment_Reply: true });\r\n    this.setState({ Reply_Name: Name, Reply_Id:ID });\r\n    \r\n  };\r\n  CloseReply = () => {\r\n    this.setState({ Comment_Reply: false });\r\n  };\r\n\r\n  SetComment = (Data) => {\r\n    var ArrayFinal = this.state.CommentsData;\r\n    ArrayFinal.push(Data);\r\n    this.setState({ CommentsData: ArrayFinal });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.ID === \"null\") {\r\n      return <>Loading</>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"Comment_Section text-left mb-4\">\r\n            <div className=\"Comment_Heading\">\r\n              <h4 className=\"\">\r\n                Comments\r\n                <small>\r\n                  {\" \"}\r\n                  &#40;\r\n                  {this.state.CommentsData == null\r\n                    ? 0\r\n                    : this.state.CommentsData.length}\r\n                  &#41;\r\n                </small>\r\n              </h4>\r\n            </div>\r\n            <div className=\"All_Comments\">\r\n              {this.state.CommentsData == null ||\r\n              this.state.CommentsData.length === 0 ? (\r\n                <p>No Comments</p>\r\n              ) : (\r\n                this.state.CommentsData.map((item, key) => {\r\n                  while (item.body.includes(\"'\")) {\r\n                    item.body = item.body.replace(\"'\", '\"');\r\n                  }\r\n\r\n                  console.log(item.body);\r\n                  var MainBody = JSON.parse(item.body);\r\n                  var parent_ID = item.sys.id;\r\n                  if (item.sys.parent === null) {\r\n                    return (\r\n                      <div className=\"row mb-5\" key={key}>\r\n                        <div className=\"col-lg-2 col-md-2 Comment_Image\">\r\n                          <img src=\"https://monstar-lab.com/global/wp-content/uploads/sites/11/2019/04/male-placeholder-image.jpeg\" />\r\n                        </div>\r\n                        <div className=\"col-lg-10 col-md-10 Comment_Body\">\r\n                          <h5 className=\"text-left\">\r\n                            {MainBody[\"Added By\"]}{\" \"}\r\n                            <span className=\"float-right Comment_Date\">\r\n                              <i className=\"fa-regular fa-calendar-minus\"></i>{\" \"}\r\n                              {MainBody[\"Added Date\"]}\r\n                            </span>\r\n                          </h5>\r\n                          <p className=\"mt-3\">{MainBody.Body}</p>\r\n\r\n                          <div className=\"CommentReply\">\r\n                            <button\r\n                              className=\"btn btn-default ProjectBtn float-left mt-0 pl-0 pr-0\"\r\n                              onClick={() =>\r\n                                this.OpenReply(MainBody[\"Added By\"],item.sys.id)\r\n                              }\r\n                            >\r\n                              Reply\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-2 col-md-2\"></div>\r\n                        <div className=\"col-lg-10 col-md-10 Reply_Comments\">\r\n                          {this.state.CommentsData.map((Nested_Item, key) => {\r\n                            while (Nested_Item.body.includes(\"'\")) {\r\n                              Nested_Item.body = Nested_Item.body.replace(\r\n                                \"'\",\r\n                                '\"'\r\n                              );\r\n                            }\r\n                            var InnerBody = JSON.parse(Nested_Item.body);\r\n                            if (\r\n                              Nested_Item.sys.parent !== null &&\r\n                              Nested_Item.sys.parent.sys.id === parent_ID\r\n                            ) {\r\n                              return (\r\n                                <>\r\n                                  <div key={key}>\r\n                                    <div className=\"row mt-5\">\r\n                                      <div className=\"col-lg-2 col-md-2 Comment_Image\">\r\n                                        <img src=\"https://monstar-lab.com/global/wp-content/uploads/sites/11/2019/04/male-placeholder-image.jpeg\" />\r\n                                      </div>\r\n                                      <div className=\"col-lg-10 col-md-10 Comment_Body\">\r\n                                        <h5 className=\"text-left\">\r\n                                          {InnerBody[\"Added By\"]}{\" \"}\r\n                                          <span className=\"float-right Comment_Date\">\r\n                                            <i className=\"fa-regular fa-calendar-minus\"></i>{\" \"}\r\n                                            {InnerBody[\"Added Date\"]}\r\n                                          </span>\r\n                                        </h5>\r\n                                        <p className=\"mt-3\">{InnerBody.Body}</p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </>\r\n                              );\r\n                            } else {\r\n                              <></>;\r\n                            }\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })\r\n              )}\r\n            </div>\r\n          </div>\r\n          {!this.state.Comment_Reply ? (\r\n            <div className=\"Post_Comment text-left ContactForm\">\r\n              <div className=\"Comment_Heading\">\r\n                <h4 className=\"\">Post A Comment</h4>\r\n              </div>\r\n              <CommentForm\r\n                ID={this.props.ID}\r\n                SetComment={(Data) => this.SetComment(Data)}\r\n                Type={\"MainComment\"}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"Post_Comment text-left ContactForm\">\r\n              <div className=\"Comment_Heading\">\r\n                <h4 className=\"CommentReply\">\r\n                  Reply to {this.state.Reply_Name}                  \r\n                  <button\r\n                    className=\"btn btn-default ProjectBtn mt-0 pl-0 pr-0\"\r\n                    onClick={() => this.CloseReply()}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </h4>\r\n              </div>\r\n              <CommentForm\r\n                ID={this.props.ID}\r\n                SetComment={(Data) => this.SetComment(Data)}\r\n                ReplyID={this.state.Reply_Id}\r\n                Type={\"reply\"}\r\n                CloseReply={()=>this.CloseReply()}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\BlogSidebar.js",[],[],"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Utils\\Endpoints.js",[],[],"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Utils\\GlobalFunctions.js",[],[],"C:\\Users\\SYS\\Desktop\\Nehal's Work\\Zenith Blog\\src\\Components\\BlogComponents\\CommentForm.js",[],[],{"ruleId":"113","severity":1,"message":"114","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":12},{"ruleId":"113","severity":1,"message":"117","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":37,"column":36,"nodeType":"120","messageId":"121","endLine":37,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":49,"column":34,"nodeType":"120","messageId":"121","endLine":49,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":100,"column":19,"nodeType":"124","endLine":100,"endColumn":61},{"ruleId":"125","severity":1,"message":"126","line":117,"column":23,"nodeType":"124","messageId":"127","endLine":117,"endColumn":68},{"ruleId":"113","severity":1,"message":"128","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":17},{"ruleId":"113","severity":1,"message":"129","line":24,"column":11,"nodeType":"115","messageId":"116","endLine":24,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":47,"column":11,"nodeType":"115","messageId":"132","endLine":47,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":54,"column":11,"nodeType":"115","messageId":"132","endLine":54,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":71,"column":32,"nodeType":"120","messageId":"121","endLine":71,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":119,"column":21,"nodeType":"124","endLine":123,"endColumn":23},{"ruleId":"118","severity":1,"message":"133","line":8,"column":20,"nodeType":"120","messageId":"121","endLine":8,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":12,"column":6,"nodeType":"136","endLine":12,"endColumn":13,"suggestions":"137"},{"ruleId":"118","severity":1,"message":"133","line":14,"column":18,"nodeType":"120","messageId":"121","endLine":14,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":20,"column":30,"nodeType":"120","messageId":"121","endLine":20,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":23,"column":33,"nodeType":"120","messageId":"121","endLine":23,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":26,"column":33,"nodeType":"120","messageId":"121","endLine":26,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":29,"column":33,"nodeType":"120","messageId":"121","endLine":29,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":32,"column":33,"nodeType":"120","messageId":"121","endLine":32,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":35,"column":33,"nodeType":"120","messageId":"121","endLine":35,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":38,"column":33,"nodeType":"120","messageId":"121","endLine":38,"endColumn":35},{"ruleId":"113","severity":1,"message":"138","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"139","line":4,"column":31,"nodeType":"115","messageId":"116","endLine":4,"endColumn":45},{"ruleId":"113","severity":1,"message":"140","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":71,"column":57,"nodeType":"143","messageId":"144","endLine":71,"endColumn":59},{"ruleId":"122","severity":1,"message":"123","line":83,"column":27,"nodeType":"124","endLine":83,"endColumn":135},{"ruleId":"141","severity":1,"message":"142","line":108,"column":75,"nodeType":"143","messageId":"144","endLine":108,"endColumn":77},{"ruleId":"122","severity":1,"message":"123","line":125,"column":41,"nodeType":"124","endLine":125,"endColumn":149},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component MY_Gallery must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'PropTypes' is defined but never used.","'urlParams' is assigned a value but never used.","no-redeclare","'response' is already defined.","redeclared","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MainObject'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'Link' is defined but never used.","'PostingComment' is defined but never used.","'GetCurrDate' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"146","fix":"147"},"Update the dependencies array to be: [MainObject, props]",{"range":"148","text":"149"},[338,345],"[MainObject, props]"]